{"ast":null,"code":"var _jsxFileName = \"E:\\\\mern-task-management-system\\\\frontend\\\\src\\\\pages\\\\UpdateEmail.js\",\n  _s = $RefreshSig$();\n// pages/UpdateEmail.js\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { updateEmail } from '../actions/authActions';\nimport { useLocation } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UpdateEmail = () => {\n  _s();\n  const dispatch = useDispatch();\n  const {\n    token\n  } = useSelector(state => state.auth);\n  const [newEmail, setNewEmail] = useState('');\n  const [error, setError] = useState('');\n  const [userId, setUserId] = useState(null);\n  const [success, setSuccess] = useState('');\n  const location = useLocation();\n  useEffect(() => {\n    const queryParams = new URLSearchParams(location.search);\n    setUserId(queryParams.get('userId'));\n  }, [location]);\n  const handleSubmit = e => {\n    e.preventDefault();\n    setError('');\n    setSuccess('');\n    if (userId) {\n      dispatch(updateEmail(token, userId, newEmail)).catch(err => setError(err.message));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"max-w-md mx-auto mt-10 p-5 border border-gray-300 rounded\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl font-bold mb-5\",\n      children: \"Update Email\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-red-500 mb-4\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 17\n    }, this), success && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-green-500 mb-4\",\n      children: success\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 19\n    }, this), \"      \", /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        value: newEmail,\n        onChange: e => setNewEmail(e.target.value),\n        placeholder: \"New Email\",\n        className: \"border border-gray-300 p-2 w-full mb-4 rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"bg-blue-500 text-white p-2 w-full rounded\",\n        children: \"Update Email\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 74\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n};\n_s(UpdateEmail, \"ftgSnjrgeomkg2jpvfZvnLwT0sU=\", false, function () {\n  return [useDispatch, useSelector, useLocation];\n});\n_c = UpdateEmail;\nexport default UpdateEmail;\nvar _c;\n$RefreshReg$(_c, \"UpdateEmail\");","map":{"version":3,"names":["React","useState","useEffect","useDispatch","useSelector","updateEmail","useLocation","jsxDEV","_jsxDEV","UpdateEmail","_s","dispatch","token","state","auth","newEmail","setNewEmail","error","setError","userId","setUserId","success","setSuccess","location","queryParams","URLSearchParams","search","get","handleSubmit","e","preventDefault","catch","err","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["E:/mern-task-management-system/frontend/src/pages/UpdateEmail.js"],"sourcesContent":["// pages/UpdateEmail.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { updateEmail } from '../actions/authActions';\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nconst UpdateEmail = () => {\r\n  const dispatch = useDispatch();\r\n  const { token } = useSelector((state) => state.auth);\r\n  const [newEmail, setNewEmail] = useState('');\r\n  const [error, setError] = useState('');\r\n  const [userId, setUserId] = useState(null);\r\n  const [success, setSuccess] = useState('');\r\n\r\n\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const queryParams = new URLSearchParams(location.search);\r\n    setUserId(queryParams.get('userId'));\r\n  }, [location]);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setError('');\r\n    setSuccess('');\r\n    if (userId) {\r\n      dispatch(updateEmail(token, userId, newEmail)).catch((err) =>\r\n        setError(err.message)\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"max-w-md mx-auto mt-10 p-5 border border-gray-300 rounded\">\r\n      <h2 className=\"text-2xl font-bold mb-5\">Update Email</h2>\r\n      {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n      {success && <p className=\"text-green-500 mb-4\">{success}</p>}      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"email\"\r\n          value={newEmail}\r\n          onChange={(e) => setNewEmail(e.target.value)}\r\n          placeholder=\"New Email\"\r\n          className=\"border border-gray-300 p-2 w-full mb-4 rounded\"\r\n        />\r\n        <button\r\n          type=\"submit\"\r\n          className=\"bg-blue-500 text-white p-2 w-full rounded\"\r\n        >\r\n          Update Email\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default UpdateEmail;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}